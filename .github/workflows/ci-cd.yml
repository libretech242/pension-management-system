name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install Dependencies
      run: |
        npm ci
        cd client && npm ci
        
    - name: Setup Test Database
      env:
        DATABASE_URL: ${{ secrets.NEON_TEST_DATABASE_URL }}
        NODE_ENV: test
      run: |
        npm run db:migrate
        
    - name: Run Backend Tests
      env:
        DATABASE_URL: ${{ secrets.NEON_TEST_DATABASE_URL }}
        NODE_ENV: test
        JWT_SECRET: test_secret
        SESSION_SECRET: test_session_secret
      run: npm test
        
    - name: Run Frontend Tests
      run: cd client && npm test
        
    - name: Build Frontend
      run: cd client && npm run build

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        
    - name: Build and push backend Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend:latest
        labels: ${{ steps.meta.outputs.labels }}
        
    - name: Build and push frontend Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./client
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-frontend:latest
        labels: ${{ steps.meta.outputs.labels }}
